{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._checkResponse);\n  }\n\n  editAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","credentials","then","getInitialCards","setUserInfo","name","about","method","body","JSON","stringify","addNewCard","link","deleteCard","cardId","addLike","removeLike","editAvatar","avatar","api"],"sources":["C:/Users/ASUS/dev/mesto-full/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers, credentials: 'include' })\n      .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers, credentials: 'include' })\n      .then(this._checkResponse)\n  }\n\n  setUserInfo({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n\n      .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    })\n      .then(this._checkResponse)\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n      credentials: 'include'\n    })\n\n      .then(this._checkResponse)\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    })\n\n      .then(this._checkResponse)\n  }\n\n  editAvatar({ avatar }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n\n      .then(this._checkResponse)\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}