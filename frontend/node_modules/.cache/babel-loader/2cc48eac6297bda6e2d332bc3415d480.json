{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '1a2b710a-03a9-4348-9fbe-153973737ce6',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","setUserInfo","name","about","method","body","JSON","stringify","addNewCard","link","deleteCard","cardId","addLike","removeLike","editAvatar","avatar","api","authorization"],"sources":["C:/Users/ASUS/dev/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\n      .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\n      .then(this._checkResponse)\n  }\n\n  setUserInfo({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n\n      .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse)\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n\n      .then(this._checkResponse)\n  }\n\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n\n      .then(this._checkResponse)\n  }\n\n  editAvatar({ avatar }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n\n      .then(this._checkResponse)\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '1a2b710a-03a9-4348-9fbe-153973737ce6',\n    'Content-Type': 'application/json'\n  }\n})\n"],"mappings":"AAAA,MAAMA,GAAN,CAAU;EACRC,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;IACA,KAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;EACD;;EAEDC,cAAc,CAACC,GAAD,EAAM;IAClB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IAED,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD;;EAEDC,WAAW,GAAG;IACZ,OAAOC,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;MAAEG,OAAO,EAAE,KAAKD;IAAhB,CAA9B,CAAL,CACJW,IADI,CACC,KAAKT,cADN,CAAP;EAED;;EAEDU,eAAe,GAAG;IAChB,OAAOF,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;MAAEG,OAAO,EAAE,KAAKD;IAAhB,CAA3B,CAAL,CACJW,IADI,CACC,KAAKT,cADN,CAAP;EAED;;EAEDW,WAAW,OAAkB;IAAA,IAAjB;MAAEC,IAAF;MAAQC;IAAR,CAAiB;IAC3B,OAAOL,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;MACxCkB,MAAM,EAAE,OADgC;MAExCf,OAAO,EAAE,KAAKD,QAF0B;MAGxCiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBL,IAAI,EAAEA,IADa;QAEnBC,KAAK,EAAEA;MAFY,CAAf;IAHkC,CAA9B,CAAL,CAQJJ,IARI,CAQC,KAAKT,cARN,CAAP;EASD;;EAEDkB,UAAU,QAAiB;IAAA,IAAhB;MAAEN,IAAF;MAAQO;IAAR,CAAgB;IACzB,OAAOX,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;MACrCkB,MAAM,EAAE,MAD6B;MAErCf,OAAO,EAAE,KAAKD,QAFuB;MAGrCiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBL,IAAI,EAAEA,IADa;QAEnBO,IAAI,EAAEA;MAFa,CAAf;IAH+B,CAA3B,CAAL,CASJV,IATI,CASC,KAAKT,cATN,CAAP;EAUD;;EAEDoB,UAAU,CAACC,MAAD,EAAS;IACjB,OAAOb,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAASyB,MAAO,EAAlC,EAAqC;MAC/CP,MAAM,EAAE,QADuC;MAE/Cf,OAAO,EAAE,KAAKD;IAFiC,CAArC,CAAL,CAIJW,IAJI,CAIC,KAAKT,cAJN,CAAP;EAKD;;EAEDsB,OAAO,CAACD,MAAD,EAAS;IACd,OAAOb,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAASyB,MAAO,QAAlC,EAA2C;MACrDP,MAAM,EAAE,KAD6C;MAErDf,OAAO,EAAE,KAAKD;IAFuC,CAA3C,CAAL,CAKJW,IALI,CAKC,KAAKT,cALN,CAAP;EAMD;;EAGDuB,UAAU,CAACF,MAAD,EAAS;IACjB,OAAOb,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAASyB,MAAO,QAAlC,EAA2C;MACrDP,MAAM,EAAE,QAD6C;MAErDf,OAAO,EAAE,KAAKD;IAFuC,CAA3C,CAAL,CAKJW,IALI,CAKC,KAAKT,cALN,CAAP;EAMD;;EAEDwB,UAAU,QAAa;IAAA,IAAZ;MAAEC;IAAF,CAAY;IACrB,OAAOjB,KAAK,CAAE,GAAE,KAAKZ,QAAS,kBAAlB,EAAqC;MAC/CkB,MAAM,EAAE,OADuC;MAE/Cf,OAAO,EAAE,KAAKD,QAFiC;MAG/CiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBQ,MAAM,EAAEA;MADW,CAAf;IAHyC,CAArC,CAAL,CAQJhB,IARI,CAQC,KAAKT,cARN,CAAP;EASD;;AAtFO;;AA0FV,OAAO,MAAM0B,GAAG,GAAG,IAAIjC,GAAJ,CAAQ;EACzBI,OAAO,EAAE,6CADgB;EAEzBE,OAAO,EAAE;IACP4B,aAAa,EAAE,sCADR;IAEP,gBAAgB;EAFT;AAFgB,CAAR,CAAZ"},"metadata":{},"sourceType":"module"}